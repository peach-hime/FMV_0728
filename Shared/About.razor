
<div class="modal fade show" id="myModal" style="display:block" aria-modal="true" role="dialog" @onclick=clickOut>
    <div class="modal-dialog modal-dialog-scrollable modal-dialog-centered modal-lg" @onclick=clickNothing @onclick:stopPropagation>
        <div class="modal-content">
            <div class="modal-header sticky-top bg-white">
                <h4 class="modal-title">FMV - the FRAM Model Visualiser</h4>
                <button type="button" class="close" @onclick="@(() => OnClick.InvokeAsync(false))">&times;</button>
            </div>
            <div class="modal-body">
                <p>
                    For more information on FRAM - the FUNCTIONAL RESONANCE ANALYSIS METHOD
                    for modelling non-trivial socio-technical systems, please visit the website <a href="https://functionalresonance.com/" target="_blank">functionalresonance.com</a>
                </p>
                <p>
                    Ctrl+R &ensp; Refresh New Model<br />
                    <a class="oi oi-data-transfer-upload" /> Upload an existing FMV data file&emsp; <a class="oi oi-data-transfer-download" /> Download the model as an FMV data file<br />
                    <a class="oi oi-image" /> Download the model as an SVG image file<br />
                    <a class="oi oi-zoom-out" /> Zoom out&emsp; <a class="oi oi-fullscreen-enter" /> Zoom fullscreen&emsp; <a class="oi oi-zoom-in" /> Zoom in&emsp; <br />
                    <AuthorizeView>
                        <Authorized>
                            <a class="oi oi-action-undo" /> Undo&emsp; <a class="oi oi-action-redo" /> Redo<br />
                        </Authorized>
                    </AuthorizeView>
                    <a class="oi oi-tags" /> Hide/Show Aspect labels&emsp; <a class="oi oi-eye" /> Change the Function style rendering<br />
                    <AuthorizeView>
                        <Authorized>
                            <a class="oi oi-reload" /> Restore Latest Model&emsp; <a class="oi oi-account-logout" /> Log Out of Account<br />
                        </Authorized>
                        <NotAuthorized>
                            <a class="oi oi-account-login" /> Log In to Account<br />
                        </NotAuthorized>
                    </AuthorizeView>
                </p>
                <p>
                    <a class="oi oi-plus" /> Add a new Function and enter a Name<br />
                    To delete a Function, delete all Aspects and then delete the Name text of the Function<br />
                </p>
                <p>
                    <a class="btn-text">I</a>nput <a class="btn-text">O</a>utput <a class="btn-text">P</a>recondition <a class="btn-text">R</a>esource <a class="btn-text">C</a>ontrol <a class="btn-text">T</a>ime<br />
                    Add an Aspect to the selected Function. 
                    Select a Function by clicking/tapping, it will show a blue highlight. 
                    To delete an Aspect, delete all text
                </p>
                <AuthorizeView>
                    <Authorized>
                        <p>
                            <a style="font-size:smaller; font-weight:600">A</a>|<a style="font-size:large">A</a> Decrease/Increase font size on Functions and Aspects. Esc for default size<br />
                            <a class="oi oi-brush" /> Add colour to a Function
                        </p>
                    </Authorized>
                </AuthorizeView>
                <p>
                    When an <a class="btn-text">O</a>utput Aspect has the same name as an <a class="btn-text">I P R C T</a> aspect on another Function, a Potential Coupling line will appear to connect the Functions
                </p>
                <p>
                    Drag a Function to arrange the model. On iPad use long-press on the Function to lock the scrolling<br />
                    Use F11 for full-screen mode, or install the app to your desktop or home page for offline use
                </p>
                <strong>Copyright © 2021 ZERPRIZE LIMITED</strong>
                <p>
                    This program is free software: you can redistribute it and/or modify
                    it under the terms of the GNU Affero General Public License as published
                    by the Free Software Foundation, either version 3 of the License, or
                    any later version.
                </p>
                <p>
                    This program is distributed in the hope that it will be useful,
                    but WITHOUT ANY WARRANTY; without even the implied warranty of
                    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                    GNU Affero General Public License for more details <a href="https://www.gnu.org/licenses/" target="_blank">https://www.gnu.org/licenses/</a>.
                </p>
            </div>
            <footer class="modal-footer d-block float-left">
                <div class="float-left pt-2">
                    <AuthorizeView>
                        <Authorized>
                            <a class="pr-3" href="https://github.com/Zerprize-Limited/FMV_Community_Edition" target="_blank">Source Code</a>
                        </Authorized>
                    </AuthorizeView>
                    <a class="pr-3" href="https://zerprize.co.nz/Home/Privacy" target="_blank">Privacy Policy</a>
                    <a class="pr-3" href="https://github.com/Zerprize-Limited/FMV_Community_Edition/wiki/FRAM-Model-Visualiser-Instructions" target="_blank">Instructions</a>
                    <a class="pr-3">Refresh version Ctrl+Shift+R</a>
                </div>
                <div class="float-right">
                    <button type="button" class="btn btn-modal" @onclick="@(() => OnClick.InvokeAsync(false))">Close</button>
                </div>
            </footer>
        </div>
    </div>
</div>

@code {

    [Parameter] public EventCallback<bool> OnClick { get; set; }

    private void clickNothing(MouseEventArgs e)
    {
    }
    private async void clickOut(MouseEventArgs e)
    {
        await OnClick.InvokeAsync(false);
    }
}